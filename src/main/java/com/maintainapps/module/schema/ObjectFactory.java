//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.05 at 12:04:53 PM GST 
//


package com.maintainapps.module.schema;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.maintainapps.module.schema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.maintainapps.module.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Config }
     * 
     */
    public Config createConfig() {
        return new Config();
    }

    /**
     * Create an instance of {@link FetchType }
     * 
     */
    public FetchType createFetchType() {
        return new FetchType();
    }

    /**
     * Create an instance of {@link FetchType.Parameters }
     * 
     */
    public FetchType.Parameters createFetchTypeParameters() {
        return new FetchType.Parameters();
    }

    /**
     * Create an instance of {@link Config.Types }
     * 
     */
    public Config.Types createConfigTypes() {
        return new Config.Types();
    }

    /**
     * Create an instance of {@link Config.Processors }
     * 
     */
    public Config.Processors createConfigProcessors() {
        return new Config.Processors();
    }

    /**
     * Create an instance of {@link Config.Fields }
     * 
     */
    public Config.Fields createConfigFields() {
        return new Config.Fields();
    }

    /**
     * Create an instance of {@link Config.Documents }
     * 
     */
    public Config.Documents createConfigDocuments() {
        return new Config.Documents();
    }

    /**
     * Create an instance of {@link ExprType }
     * 
     */
    public ExprType createExprType() {
        return new ExprType();
    }

    /**
     * Create an instance of {@link ConcatType }
     * 
     */
    public ConcatType createConcatType() {
        return new ConcatType();
    }

    /**
     * Create an instance of {@link RawType }
     * 
     */
    public RawType createRawType() {
        return new RawType();
    }

    /**
     * Create an instance of {@link DocumentType }
     * 
     */
    public DocumentType createDocumentType() {
        return new DocumentType();
    }

    /**
     * Create an instance of {@link ProcessorType }
     * 
     */
    public ProcessorType createProcessorType() {
        return new ProcessorType();
    }

    /**
     * Create an instance of {@link TruncateType }
     * 
     */
    public TruncateType createTruncateType() {
        return new TruncateType();
    }

    /**
     * Create an instance of {@link ExtractToType }
     * 
     */
    public ExtractToType createExtractToType() {
        return new ExtractToType();
    }

    /**
     * Create an instance of {@link OutlinksType }
     * 
     */
    public OutlinksType createOutlinksType() {
        return new OutlinksType();
    }

    /**
     * Create an instance of {@link UrlType }
     * 
     */
    public UrlType createUrlType() {
        return new UrlType();
    }

    /**
     * Create an instance of {@link ConstantType }
     * 
     */
    public ConstantType createConstantType() {
        return new ConstantType();
    }

    /**
     * Create an instance of {@link AttributeType }
     * 
     */
    public AttributeType createAttributeType() {
        return new AttributeType();
    }

    /**
     * Create an instance of {@link FunctionType }
     * 
     */
    public FunctionType createFunctionType() {
        return new FunctionType();
    }

    /**
     * Create an instance of {@link ProcessType }
     * 
     */
    public ProcessType createProcessType() {
        return new ProcessType();
    }

    /**
     * Create an instance of {@link FragmentType }
     * 
     */
    public FragmentType createFragmentType() {
        return new FragmentType();
    }

    /**
     * Create an instance of {@link FieldValueType }
     * 
     */
    public FieldValueType createFieldValueType() {
        return new FieldValueType();
    }

    /**
     * Create an instance of {@link TrimType }
     * 
     */
    public TrimType createTrimType() {
        return new TrimType();
    }

    /**
     * Create an instance of {@link SizeType }
     * 
     */
    public SizeType createSizeType() {
        return new SizeType();
    }

    /**
     * Create an instance of {@link ResolveType }
     * 
     */
    public ResolveType createResolveType() {
        return new ResolveType();
    }

    /**
     * Create an instance of {@link TypeType }
     * 
     */
    public TypeType createTypeType() {
        return new TypeType();
    }

    /**
     * Create an instance of {@link FirstType }
     * 
     */
    public FirstType createFirstType() {
        return new FirstType();
    }

    /**
     * Create an instance of {@link ReplaceType }
     * 
     */
    public ReplaceType createReplaceType() {
        return new ReplaceType();
    }

    /**
     * Create an instance of {@link TextType }
     * 
     */
    public TextType createTextType() {
        return new TextType();
    }

    /**
     * Create an instance of {@link ForEachType }
     * 
     */
    public ForEachType createForEachType() {
        return new ForEachType();
    }

    /**
     * Create an instance of {@link DefaultType }
     * 
     */
    public DefaultType createDefaultType() {
        return new DefaultType();
    }

    /**
     * Create an instance of {@link LastType }
     * 
     */
    public LastType createLastType() {
        return new LastType();
    }

    /**
     * Create an instance of {@link LinkType }
     * 
     */
    public LinkType createLinkType() {
        return new LinkType();
    }

    /**
     * Create an instance of {@link SingleFunctionType }
     * 
     */
    public SingleFunctionType createSingleFunctionType() {
        return new SingleFunctionType();
    }

    /**
     * Create an instance of {@link DecodeType }
     * 
     */
    public DecodeType createDecodeType() {
        return new DecodeType();
    }

    /**
     * Create an instance of {@link FieldType }
     * 
     */
    public FieldType createFieldType() {
        return new FieldType();
    }

    /**
     * Create an instance of {@link FetchType.Parameters.Parameter }
     * 
     */
    public FetchType.Parameters.Parameter createFetchTypeParametersParameter() {
        return new FetchType.Parameters.Parameter();
    }

}
